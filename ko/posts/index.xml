<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on evir35's blog</title><link>https://evir35.github.io/ko/posts/</link><description>Recent content in Posts on evir35's blog</description><generator>Hugo -- gohugo.io</generator><language>ko</language><copyright>Copyright © 2022 - {year} evir35. All Rights Reserved.</copyright><lastBuildDate>Tue, 16 Aug 2022 22:34:50 +0900</lastBuildDate><atom:link href="https://evir35.github.io/ko/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Kind로 kubernetes cluster를 local에서 구동하기</title><link>https://evir35.github.io/ko/posts/kind-setup-k8s-on-local/</link><pubDate>Tue, 16 Aug 2022 22:34:50 +0900</pubDate><guid>https://evir35.github.io/ko/posts/kind-setup-k8s-on-local/</guid><description>Kind로 Kubernetes cluster를 local에서 구동하기 kind is a tool for running local Kubernetes clusters using Docker container “nodes”. kind was primarily designed for testing Kubernetes itself, but may be used for local development or CI.
kind는 위 설명처럼 local에서 kubernetes를 test용도로 사용하고 싶을 때, docker를 이용하여 kubernetes cluster를 쉽게 구축할 수 있도록 도와주는 opensource tool이다. 이름의 유래도 재밌는데 바로 Kubernetes IN Docker에서 각 단어에서 K, IN, D를 따와서 kind가 되었다. kind github repository의 description을 확인해보면 알 수 있다.</description></item><item><title>Tryout Deno</title><link>https://evir35.github.io/ko/posts/tryout-deno/</link><pubDate>Tue, 16 Aug 2022 22:34:50 +0900</pubDate><guid>https://evir35.github.io/ko/posts/tryout-deno/</guid><description>Deno runtime의 경우 V8, Rust, Tokio로 만들어진 Javascript, Typescript, WebAssembly Runtime입니다. 이번에는 간단한 예제를 확인해보고 nodejs와 어떻게 다른지 한 번 확인해보는 시간을 가져보도록 하겠습니다.
Environment 이번 post에서 사용된 local 환경은 아래외 같습니다.
Machine: Macbook Pro (16-inchim, 2021), Apple M1 Pro OS: MacOS Monterey 12.6.3 Deno 설치 Deno installation를 참고하면 아래 command로 간단하게 설치가 가능합니다.
curl -fsSL https://deno.land/x/install/install.sh | sh deno binary가 자동으로 설치되고, 아래 명령어를 통해서 deno binary를 PATH에 등록해줍니다.</description></item><item><title>Podman 4.0.0 release</title><link>https://evir35.github.io/ko/posts/podman-release-4/</link><pubDate>Mon, 21 Mar 2022 11:44:53 +0900</pubDate><guid>https://evir35.github.io/ko/posts/podman-release-4/</guid><description>Podman 4.0.0 Release Podman 4.0.0이 2022/02/18에 릴리즈 되었습니다.
Podman 4.0 is one of our most significant releases ever, featuring over 60 new features.
공식 사이트에서는 무려 60개 이상의 새로운 feature가 추가되었다고 소개하고 있습니다. 이 중에서 제가 소개해드리고 싶은 새로운 feature에 대해서 간단한 테스트와 소개를 해보고자 합니다. 모든 새로운 feature를 확인하고 싶으신 분들은 Podman v4.0.0 release notes를 확인해주세요.
Environment 이번 post에서 사용된 local 환경은 아래외 같습니다.
Machine: Macbook Pro (16-inchim, 2021), Apple M1 Pro OS: MacOS Monterey 12.</description></item><item><title>Podman 시작하기</title><link>https://evir35.github.io/ko/posts/docker-alternatives-podman/</link><pubDate>Sun, 20 Feb 2022 17:05:53 +0900</pubDate><guid>https://evir35.github.io/ko/posts/docker-alternatives-podman/</guid><description>Docker desktop의 유료화 대부분의 사용자들이 Container를 접하는 것은 Docker를 통해서 접하고 있을 것입니다. Linux distribution(e.g. Ubuntu, CentOS, &amp;hellip;)을 사용하는 User는 문제가 없지만 Windows나 MacOS에서는 Docker를 그대로 사용할 수 없고, 가상화를 통해서만 사용이 가능합니다. 이러한 사용자들의 불편함을 줄여주기 위해 등장한 것이 바로 Docker desktop입니다. Docker desktop은 LinuxKit을 이용하여 Docker를 사용할 수 있는 Virtual Machine을 Windows나 MacOS에서 자동으로 구축하여 Docker를 사용할 수 있는 환경을 만들어 줍니다. 이러한 Docker desktop이 Business 목적으로 사용될 경우 유료로 전환되었습니다.</description></item></channel></rss>